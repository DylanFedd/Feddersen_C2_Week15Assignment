// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Group_4_DB.Models;

namespace Group_4_DB.Data
{
    public partial class academic_settingsContext : DbContext
    {
        public academic_settingsContext()
        {
        }

        public academic_settingsContext(DbContextOptions<academic_settingsContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Major> Majors { get; set; }
        public virtual DbSet<MajorsClass> MajorsClasses { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<StudentClass> StudentClasses { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Class>(entity =>
            {
                entity.Property(e => e.ClassId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ClassID");

                entity.Property(e => e.AttendanceType)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ClassName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.InstructorId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("InstructorID");
            });

            modelBuilder.Entity<Instructor>(entity =>
            {
                entity.Property(e => e.InstructorId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("InstructorID");

                entity.Property(e => e.Iemail)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("IEmail");

                entity.Property(e => e.IfirstName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("IFirstName");

                entity.Property(e => e.IlastName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ILastName");
            });

            modelBuilder.Entity<Major>(entity =>
            {
                entity.Property(e => e.MajorId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MajorID");

                entity.Property(e => e.EstimatedCompletion)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.MajorName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<MajorsClass>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ClassId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ClassID");

                entity.Property(e => e.MajorId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MajorID");
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.Property(e => e.StudentId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("StudentID");

                entity.Property(e => e.Gpa).HasColumnName("GPA");

                entity.Property(e => e.GradYear).HasColumnType("date");

                entity.Property(e => e.MajorId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("MajorID");

                entity.Property(e => e.SfirstName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SFirstName");

                entity.Property(e => e.SlastName)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SLastName");

                entity.HasOne(d => d.Major)
                    .WithMany(p => p.Students)
                    .HasForeignKey(d => d.MajorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Students__MajorI__628FA481");
            });

            modelBuilder.Entity<StudentClass>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.ClassId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ClassID");

                entity.Property(e => e.StudentId)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("StudentID");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}